class Solution {
    public int findJudge(int n, int[][] trust) {
        if(trust.length==0){
            if(n==1){
                return 1;
            }
            return -1;
        }
        int sum = 0;
        Map<Integer,Set<Integer>> temp = new HashMap<>();

        for(int i=0; i<trust.length; i++){
            Set<Integer> set = new HashSet<>();
            if(temp.containsKey(trust[i][0])){
                set = temp.get(trust[i][0]);
            }
            set.add(trust[i][1]);
            temp.put(trust[i][0],set);
        }

        Set<Integer> keys = temp.keySet();
        for(int key : keys){
            sum += key;
        }
        int actualSum = (n*(n+1))/2;
        if(actualSum == sum){
            return -1;
        }
        int rem = actualSum - sum;

        for(int key : keys){
            if(!temp.get(key).contains(rem)){
                return -1;
            }
        }
        return rem;
    }
}
